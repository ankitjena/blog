<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>graphql on Ankit Jena</title>
    <link>/tags/graphql/</link>
    <description>Recent content in graphql on Ankit Jena</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 12 Jul 2019 13:23:10 +0100</lastBuildDate>
    
	<atom:link href="/tags/graphql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using GraphQL Visitor Pattern</title>
      <link>/posts/2019/07/using-graphql-visitor-pattern/</link>
      <pubDate>Fri, 12 Jul 2019 13:23:10 +0100</pubDate>
      
      <guid>/posts/2019/07/using-graphql-visitor-pattern/</guid>
      <description>GraphQL is a amazing technology which is being adapted more and more. As part of my work for JBoss community in GSoC&#39;19 I have been working on Graphback. For the needs of the project we had to extract information from a schema (SDL syntax) into a nice object we can use. For example, convert this
type User{ username: String! email: String } to something like
{ name: &amp;quot;User&amp;quot;, fields: [ { name: &amp;quot;username&amp;quot;, type: &amp;quot;String&amp;quot;, isNull: false }, { name: &amp;quot;email&amp;quot;, type: &amp;quot;String&amp;quot;, isNull: true } ] } When schema is read by GraphQL it doesn&#39;t store it as a string, it does a lot of parsing to convert it into an AST(will talk more about it).</description>
    </item>
    
  </channel>
</rss>